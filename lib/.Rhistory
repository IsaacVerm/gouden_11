mutate(total = !!parse_quosure(total_expression))
# calculate contribution
player_score_by_season = as.data.frame(player_score_by_season) %>%
mutate(contribution = total/opening_price)
# only keep relevant data
rm(list=setdiff(ls(), "player_score_by_season"))
player_score_by_season[1:10,]
# packages
library(dplyr)
library(ggplot2)
library(rlang)
# connect to database
setwd("/home/isaac/SpiderOak Hive/gouden_11/lib")
con <- DBI::dbConnect(RSQLite::SQLite(), "gouden_11")
# get players table
players <- tbl(con, "players")
# summarize by name and season
player_score_by_season = players %>%
group_by(name, season) %>%
summarise(team = team,
position = position,
avg_price = mean(price),
opening_price = price,
goal = sum(goal),
assist = sum(assist),
yellow = sum(yellow),
red = sum(red),
clean_sheet = sum(clean_sheet),
goal_conceded = sum(goal_conceded),
half_time = sum(half_time),
team_performance = sum(team_performance))
# calculate total score
total_var = c("goal","assist","yellow","red","clean_sheet","goal_conceded",
"half_time","team_performance")
total_expression = paste(total_var, collapse = '+')
player_score_by_season = player_score_by_season %>%
mutate(total = !!parse_quosure(total_expression))
# calculate contribution
player_score_by_season = as.data.frame(player_score_by_season) %>% # must be dataframe if not SQL division
mutate(contribution = total/opening_price) %>%
tibble
# only keep relevant data
rm(list=setdiff(ls(), "player_score_by_season"))
player_score_by_season
# packages
library(dplyr)
library(ggplot2)
library(rlang)
# connect to database
setwd("/home/isaac/SpiderOak Hive/gouden_11/lib")
con <- DBI::dbConnect(RSQLite::SQLite(), "gouden_11")
# get players table
players <- tbl(con, "players")
# summarize by name and season
player_score_by_season = players %>%
group_by(name, season) %>%
summarise(team = team,
position = position,
avg_price = mean(price),
opening_price = price,
goal = sum(goal),
assist = sum(assist),
yellow = sum(yellow),
red = sum(red),
clean_sheet = sum(clean_sheet),
goal_conceded = sum(goal_conceded),
half_time = sum(half_time),
team_performance = sum(team_performance))
# calculate total score
total_var = c("goal","assist","yellow","red","clean_sheet","goal_conceded",
"half_time","team_performance")
total_expression = paste(total_var, collapse = '+')
player_score_by_season = player_score_by_season %>%
mutate(total = !!parse_quosure(total_expression))
# calculate contribution
player_score_by_season = as.data.frame(player_score_by_season) %>% # must be dataframe if not SQL division
mutate(contribution = total/opening_price) %>%
tibble
# only keep relevant data
rm(list=setdiff(ls(), "player_score_by_season"))
player_score_by_season[1,]
player_score_by_season
# packages
library(dplyr)
library(ggplot2)
library(rlang)
# connect to database
setwd("/home/isaac/SpiderOak Hive/gouden_11/lib")
con <- DBI::dbConnect(RSQLite::SQLite(), "gouden_11")
# get players table
players <- tbl(con, "players")
# summarize by name and season
player_score_by_season = players %>%
group_by(name, season) %>%
summarise(team = team,
position = position,
avg_price = mean(price),
opening_price = price,
goal = sum(goal),
assist = sum(assist),
yellow = sum(yellow),
red = sum(red),
clean_sheet = sum(clean_sheet),
goal_conceded = sum(goal_conceded),
half_time = sum(half_time),
team_performance = sum(team_performance))
# calculate total score
total_var = c("goal","assist","yellow","red","clean_sheet","goal_conceded",
"half_time","team_performance")
total_expression = paste(total_var, collapse = '+')
player_score_by_season = player_score_by_season %>%
mutate(total = !!parse_quosure(total_expression))
# calculate contribution
player_score_by_season = as.data.frame(player_score_by_season) %>% # must be dataframe if not SQL division
mutate(contribution = total/opening_price) %>%
player_score_by_season = tibble(player_score_by_season)
# only keep relevant data
rm(list=setdiff(ls(), "player_score_by_season"))
# packages
library(dplyr)
library(ggplot2)
library(rlang)
# connect to database
setwd("/home/isaac/SpiderOak Hive/gouden_11/lib")
con <- DBI::dbConnect(RSQLite::SQLite(), "gouden_11")
# get players table
players <- tbl(con, "players")
# summarize by name and season
player_score_by_season = players %>%
group_by(name, season) %>%
summarise(team = team,
position = position,
avg_price = mean(price),
opening_price = price,
goal = sum(goal),
assist = sum(assist),
yellow = sum(yellow),
red = sum(red),
clean_sheet = sum(clean_sheet),
goal_conceded = sum(goal_conceded),
half_time = sum(half_time),
team_performance = sum(team_performance))
# calculate total score
total_var = c("goal","assist","yellow","red","clean_sheet","goal_conceded",
"half_time","team_performance")
total_expression = paste(total_var, collapse = '+')
player_score_by_season = player_score_by_season %>%
mutate(total = !!parse_quosure(total_expression))
# calculate contribution
player_score_by_season = as.data.frame(player_score_by_season) %>% # must be dataframe if not SQL division
mutate(contribution = total/opening_price) %>%
as_tibble
# only keep relevant data
rm(list=setdiff(ls(), "player_score_by_season"))
player_score_by_season
# load data
setwd("/home/isaac/SpiderOak Hive/gouden_11/data/code/preparation")
source('player_score_by_season.R')
# packages
library(lpSolve)
# select only current season
player_score_by_season = player_score_by_season %>%
filter(season == "2016-2017")
# load data
setwd("/home/isaac/SpiderOak Hive/gouden_11/data/code/preparation")
source('player_score_by_season.R')
# packages
library(lpSolve)
# select only current season
player_score_by_season = player_score_by_season %>%
filter(season == "2016-2017")
# biggest contribution by position
contribution_by_position = player_score_by_season %>%
group_by(position) %>%
arrange(contribution)
contribution_by_position
# load data
setwd("/home/isaac/SpiderOak Hive/gouden_11/data/code/preparation")
source('player_score_by_season.R')
# packages
library(lpSolve)
# select only current season
player_score_by_season = player_score_by_season %>%
filter(season == "2016-2017")
# biggest contribution by position
contribution_by_position = player_score_by_season %>%
group_by(position) %>%
arrange(desc(contribution))
contribution_by_position
# # setup problem
# # x1 + 9 x2 + x3 subject to
# # x1 + 2 x2 + 3 x3 <= 9
# # 3 x1 + 2 x2 + 2 x3 <= 15
# #
# f.obj <- c(1, 9, 1)
# f.con <- matrix (c(1, 2, 3, 3, 2, 2), nrow=2, byrow=TRUE)
# f.dir <- c("<=", "<=")
# f.rhs <- c(9, 15)
# #
# # Now run.
# #
# lp ("max", f.obj, f.con, f.dir, f.rhs)
# ## Not run: Success: the objective function is 40.
contribution_by_position
# load data
setwd("/home/isaac/SpiderOak Hive/gouden_11/data/code/preparation")
source('player_score_by_season.R')
# packages
library(lpSolve)
# select only current season
player_score_by_season = player_score_by_season %>%
filter(season == "2016-2017")
# biggest contribution by position
contribution_by_position = player_score_by_season %>%
group_by(position) %>%
arrange(desc(contribution))
#
profitability_positions = ggplot(data = as.data.frame(player_score_by_season),
aes(x = name, y = contribution)) +
geom_bar()
plot(profitability_positions)
# # setup problem
# # x1 + 9 x2 + x3 subject to
# # x1 + 2 x2 + 3 x3 <= 9
# # 3 x1 + 2 x2 + 2 x3 <= 15
# #
# f.obj <- c(1, 9, 1)
# f.con <- matrix (c(1, 2, 3, 3, 2, 2), nrow=2, byrow=TRUE)
# f.dir <- c("<=", "<=")
# f.rhs <- c(9, 15)
# #
# # Now run.
# #
# lp ("max", f.obj, f.con, f.dir, f.rhs)
# ## Not run: Success: the objective function is 40.
plot(profitability_positions)
# load data
setwd("/home/isaac/SpiderOak Hive/gouden_11/data/code/preparation")
source('player_score_by_season.R')
# packages
library(lpSolve)
# select only current season
player_score_by_season = player_score_by_season %>%
filter(season == "2016-2017")
# biggest contribution by position
contribution_by_position = player_score_by_season %>%
group_by(position) %>%
arrange(desc(contribution))
#
profitability_positions = ggplot(data = as.data.frame(player_score_by_season),
aes(x = name, y = contribution)) +
geom_col()
plot(profitability_positions)
# # setup problem
# # x1 + 9 x2 + x3 subject to
# # x1 + 2 x2 + 3 x3 <= 9
# # 3 x1 + 2 x2 + 2 x3 <= 15
# #
# f.obj <- c(1, 9, 1)
# f.con <- matrix (c(1, 2, 3, 3, 2, 2), nrow=2, byrow=TRUE)
# f.dir <- c("<=", "<=")
# f.rhs <- c(9, 15)
# #
# # Now run.
# #
# lp ("max", f.obj, f.con, f.dir, f.rhs)
# ## Not run: Success: the objective function is 40.
# load data
setwd("/home/isaac/SpiderOak Hive/gouden_11/data/code/preparation")
source('player_score_by_season.R')
# packages
library(lpSolve)
# select only current season
player_score_by_season = player_score_by_season %>%
filter(season == "2016-2017")
# biggest contribution by position
contribution_by_position = player_score_by_season %>%
group_by(position) %>%
arrange(desc(contribution)) %>%
top_n(20)
contribution_by_position
# load data
setwd("/home/isaac/SpiderOak Hive/gouden_11/data/code/preparation")
source('player_score_by_season.R')
# packages
library(lpSolve)
# select only current season
player_score_by_season = player_score_by_season %>%
filter(season == "2016-2017")
# biggest contribution by position
contribution_by_position = player_score_by_season %>%
arrange(desc(contribution)) %>%
top_n(20)
View(contribution_by_position)
# load data
setwd("/home/isaac/SpiderOak Hive/gouden_11/data/code/preparation")
source('player_score_by_season.R')
# packages
library(lpSolve)
# select only current season
player_score_by_season = player_score_by_season %>%
filter(season == "2016-2017")
# biggest contribution by position
contribution_by_position = player_score_by_season %>%
arrange(desc(contribution)) %>%
top_n(20)
#
profitability_positions = ggplot(data = top_n(ta.frame(contribution_by_position),
aes(x = position, y = contribution)) +
geom_col()
plot(profitability_positions)
# # setup problem
# # x1 + 9 x2 + x3 subject to
# # x1 + 2 x2 + 3 x3 <= 9
# # 3 x1 + 2 x2 + 2 x3 <= 15
# #
# f.obj <- c(1, 9, 1)
# f.con <- matrix (c(1, 2, 3, 3, 2, 2), nrow=2, byrow=TRUE)
# f.dir <- c("<=", "<=")
# f.rhs <- c(9, 15)
# #
# # Now run.
# #
# lp ("max", f.obj, f.con, f.dir, f.rhs)
# ## Not run: Success: the objective function is 40.
# load data
setwd("/home/isaac/SpiderOak Hive/gouden_11/data/code/preparation")
source('player_score_by_season.R')
# packages
library(lpSolve)
# select only current season
player_score_by_season = player_score_by_season %>%
filter(season == "2016-2017")
# biggest contribution by position
contribution_by_position = player_score_by_season %>%
arrange(desc(contribution)) %>%
top_n(20)
#
profitability_positions = ggplot(data = top_n(ta.frame(contribution_by_position),
aes(x = position, y = contribution)) +
geom_col()
plot(profitability_positions)
# # setup problem
# # x1 + 9 x2 + x3 subject to
# # x1 + 2 x2 + 3 x3 <= 9
# # 3 x1 + 2 x2 + 2 x3 <= 15
# #
# f.obj <- c(1, 9, 1)
# f.con <- matrix (c(1, 2, 3, 3, 2, 2), nrow=2, byrow=TRUE)
# f.dir <- c("<=", "<=")
# f.rhs <- c(9, 15)
# #
# # Now run.
# #
# lp ("max", f.obj, f.con, f.dir, f.rhs)
# ## Not run: Success: the objective function is 40.
# load data
setwd("/home/isaac/SpiderOak Hive/gouden_11/data/code/preparation")
source('player_score_by_season.R')
# packages
library(lpSolve)
# select only current season
player_score_by_season = player_score_by_season %>%
filter(season == "2016-2017")
# biggest contribution by position
contribution_by_position = player_score_by_season %>%
arrange(desc(contribution)) %>%
top_n(20)
#
profitability_positions = ggplot(data = contribution_by_position,
aes(x = position, y = contribution)) +
geom_col()
plot(profitability_positions)
# # setup problem
# # x1 + 9 x2 + x3 subject to
# # x1 + 2 x2 + 3 x3 <= 9
# # 3 x1 + 2 x2 + 2 x3 <= 15
# #
# f.obj <- c(1, 9, 1)
# f.con <- matrix (c(1, 2, 3, 3, 2, 2), nrow=2, byrow=TRUE)
# f.dir <- c("<=", "<=")
# f.rhs <- c(9, 15)
# #
# # Now run.
# #
# lp ("max", f.obj, f.con, f.dir, f.rhs)
# ## Not run: Success: the objective function is 40.
View(contribution_by_position)
# load data
setwd("/home/isaac/SpiderOak Hive/gouden_11/data/code/preparation")
source('player_score_by_season.R')
# packages
library(lpSolve)
# select only current season
player_score_by_season = player_score_by_season %>%
filter(season == "2016-2017")
# biggest contribution by position
contribution_by_position = player_score_by_season %>%
arrange(desc(contribution)) %>%
top_n(20)
#
profitability_positions = ggplot(data = contribution_by_position,
aes(x = name, y = contribution)) +
geom_col()
plot(profitability_positions)
# # setup problem
# # x1 + 9 x2 + x3 subject to
# # x1 + 2 x2 + 3 x3 <= 9
# # 3 x1 + 2 x2 + 2 x3 <= 15
# #
# f.obj <- c(1, 9, 1)
# f.con <- matrix (c(1, 2, 3, 3, 2, 2), nrow=2, byrow=TRUE)
# f.dir <- c("<=", "<=")
# f.rhs <- c(9, 15)
# #
# # Now run.
# #
# lp ("max", f.obj, f.con, f.dir, f.rhs)
# ## Not run: Success: the objective function is 40.
# load data
setwd("/home/isaac/SpiderOak Hive/gouden_11/data/code/preparation")
source('player_score_by_season.R')
# packages
library(lpSolve)
# select only current season
player_score_by_season = player_score_by_season %>%
filter(season == "2016-2017")
# biggest contribution by position
contribution_by_position = player_score_by_season %>%
arrange(desc(contribution)) %>%
top_n(20)
#
profitability_positions = ggplot(data = contribution_by_position,
aes(x = name, y = contribution, colour = position)) +
geom_col()
plot(profitability_positions)
# # setup problem
# # x1 + 9 x2 + x3 subject to
# # x1 + 2 x2 + 3 x3 <= 9
# # 3 x1 + 2 x2 + 2 x3 <= 15
# #
# f.obj <- c(1, 9, 1)
# f.con <- matrix (c(1, 2, 3, 3, 2, 2), nrow=2, byrow=TRUE)
# f.dir <- c("<=", "<=")
# f.rhs <- c(9, 15)
# #
# # Now run.
# #
# lp ("max", f.obj, f.con, f.dir, f.rhs)
# ## Not run: Success: the objective function is 40.
# load data
setwd("/home/isaac/SpiderOak Hive/gouden_11/data/code/preparation")
source('player_score_by_season.R')
# packages
library(lpSolve)
# select only current season
player_score_by_season = player_score_by_season %>%
filter(season == "2016-2017")
# biggest contribution by position
contribution_by_position = player_score_by_season %>%
arrange(desc(contribution)) %>%
top_n(20)
#
profitability_positions = ggplot(data = contribution_by_position,
aes(x = name, y = contribution, fill = position)) +
geom_col()
plot(profitability_positions)
# # setup problem
# # x1 + 9 x2 + x3 subject to
# # x1 + 2 x2 + 3 x3 <= 9
# # 3 x1 + 2 x2 + 2 x3 <= 15
# #
# f.obj <- c(1, 9, 1)
# f.con <- matrix (c(1, 2, 3, 3, 2, 2), nrow=2, byrow=TRUE)
# f.dir <- c("<=", "<=")
# f.rhs <- c(9, 15)
# #
# # Now run.
# #
# lp ("max", f.obj, f.con, f.dir, f.rhs)
# ## Not run: Success: the objective function is 40.
# load data
setwd("/home/isaac/SpiderOak Hive/gouden_11/data/code/preparation")
source('player_score_by_season.R')
# packages
library(lpSolve)
# select only current season
player_score_by_season = player_score_by_season %>%
filter(season == "2016-2017")
# biggest contribution by position
contribution_by_position = player_score_by_season %>%
arrange(desc(contribution)) %>%
top_n(100)
#
profitability_positions = ggplot(data = contribution_by_position,
aes(x = name, y = contribution, fill = position)) +
geom_col()
plot(profitability_positions)
# # setup problem
# # x1 + 9 x2 + x3 subject to
# # x1 + 2 x2 + 3 x3 <= 9
# # 3 x1 + 2 x2 + 2 x3 <= 15
# #
# f.obj <- c(1, 9, 1)
# f.con <- matrix (c(1, 2, 3, 3, 2, 2), nrow=2, byrow=TRUE)
# f.dir <- c("<=", "<=")
# f.rhs <- c(9, 15)
# #
# # Now run.
# #
# lp ("max", f.obj, f.con, f.dir, f.rhs)
# ## Not run: Success: the objective function is 40.
